@namespace MDP.BlazorCore
@code {

    // Properties
    [Inject]
    public RoutesOptions RoutesOptions { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Inject]
    public AuthenticationStateProvider AuthenticationStateProvider { get; set; }


    // Methods
    protected override async Task OnInitializedAsync()
    {
        // ReturnUrl
        var returnUrl = string.Empty;
        if (string.IsNullOrEmpty(returnUrl) == true) returnUrl = (new Uri(this.NavigationManager.Uri)).PathAndQuery;
        if (string.IsNullOrEmpty(returnUrl) == true) returnUrl = "/";

        // Redirect
        var principal  = (await this.AuthenticationStateProvider.GetAuthenticationStateAsync())?.User;
        if (principal == null || principal?.Identity?.IsAuthenticated != true)
        {
            // Login
            this.NavigationManager.NavigateToLogin(this.RoutesOptions);
        }
        else
        {
            // AccessDenied
            this.NavigationManager.NavigateToAccessDenied(this.RoutesOptions);           
        }
    }
}